package org.example;

class Main {
    public static void main(String[] args) {
        전사 a전사1 = new 전사();

        a전사1.a왼손무기 = new 칼();
        a전사1.공격();
        // 출력 => 전사가 왼손으로 칼(을)를 사용합니다.

        전사 a전사2 = new 전사();
        a전사2.a왼손무기 = new 창();
        a전사2.a오른손무기 = new 도끼();
        a전사2.공격();
        // 출력 => 전사가 왼손으로 창(을)를 사용합니다.
        // 출력 => 전사가 오른손으로 도끼(을)를 사용합니다.
    }
}
class 전사 {
    무기 a왼손무기;
    무기 a오른손무기;
    void 공격(){
        if (a오른손무기!=null && a왼손무기!=null) {
            a왼손무기.작동1();
            a오른손무기.작동2();
        } else if (a왼손무기 == null) {
            a오른손무기.작동2();
        } else if (a오른손무기==null) {
            a왼손무기.작동1();
        }
    }
}

abstract class 무기 {
    abstract void 작동1 ();
    abstract void 작동2 ();
}

class 칼 extends 무기 {
    void 작동1 (){
        System.out.println("전사가 왼손으로 칼을 사용합니다  ");
    }
    void 작동2 () {
        System.out.println("전사가 오른손으로 칼을 사용합니다 ");
    }

}
class 창 extends 무기{
    void 작동1 (){
        System.out.println("전사가 왼손으로 창을 사용합니다  ");
    }
    void 작동2 () {
        System.out.println("전사가 오른손으로 창을 사용합니다 ");
    }
}
class 도끼 extends 무기 {
    void 작동1 (){
        System.out.println("전사가 왼손으로 도끼를 사용합니다  ");
    }
    void 작동2 () {
        System.out.println("전사가 오른손으로 도끼를 사용합니다 ");
    }

}






//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 전사();
//        a전사.이름 = "카니";
//        a전사.나이 = 22;
//        a전사.a무기 = new 칼();
//        a전사.공격();
//        //전사가 칼로 공격합니다.
//
//        a전사.이름 = "초코";
//        a전사.a무기 = new 활();
//        a전사.공격();
//        //전사가 활로 공격합니다
//    }
//}
//
//class 전사 {
//    int 나이;
//    static String 이름;
//    무기 a무기;
//
//    void 공격() {
//
//        a무기.공격동작( this.이름);
//    }
//}
//
//abstract class 무기 {
//    abstract void 공격동작(String 이름);
//}
//
//class 칼 extends 무기 {
//    void 공격동작 (String 이름) {
//        System.out.println(이름+"가 칼로 공격합니다 ");
//    }
//};
//
//class 활 extends 무기 {
//    void 공격동작(String 이름) {
//        System.out.println(이름 +"가 활로 공격합니다 ");
//    }
//};


/////////////////////////////////////////////
//        전사 a전사 = new 전사();
//
//        a전사.공격("브라이언","칼");
//        // 브라이언이(가) 칼(으)로 공격합니다.
//
//        a전사.재공격();
//        // 브라이언이(가) 칼(으)로 공격합니다.
//
//        a전사.공격("필립","창");
//        // 필립이(가) 창(으)로 공격합니다.
//
//        a전사.공격("마크", "지팡이");
//        // 마크(가) 지팡이(으)로 공격합니다.
//
//        a전사.재공격();
//        // 마크(가) 지팡이(으)로 공격합니다.
//
//        a전사.재공격();
//        // 마크(가) 지팡이(으)로 공격합니다.
//    }
//}
//
//class 전사 {
//
//    String a;
//    void 공격(String name , String weapon){
//        a= name +" 이(가)"+ weapon + "(으)로 공격합니다" ;
//        System.out.println(a);
//    }
//    void 재공격 (){
//        System.out.println(a);
//    }
//}


////////////////////////////////////////////////////////////////////////////////////////////////////////
//class Main {
//    public static void main(String[] args) {
//        전사 a전사 = new 전사();
//
//        a전사.공격( "브라이언","칼" );
//        // 브라이언이(가) 칼(으)로 공격합니다.
//        //매개변수를 이용해서 이름과 무기명 설정 )
//
//        a전사.공격("필립","창");
//        // 필립이(가) 창(으)로 공격합니다.
//
//        a전사.공격("마크", "지팡이");
//        // 마크(가) 지팡이(으)로 공격합니다.
//
//        a전사.공격( "브라이언","칼" ,100);
//        // 브라이언이(가) 칼(으)로 공격합니다.
//        //매개변수를 이용해서 이름과 무기명 설정 )
//
//        a전사.공격("필립","창",150);
//        // 필립이(가) 창(으)로 공격합니다.
//
//        a전사.공격("마크", "지팡이",50);
//        // 마크(가) 지팡이(으)로 공격합니다.
//    }
//}
//
//class 전사 {
//
//    void 공격 (String name , String weapon){
//        System.out.println(name + "이(가) " + weapon+" (으)로 공격합니다");
//    }
//
//    void 공격 (String name , String weapon,int 공격력){
//        System.out.println(name + "이(가) " + weapon+" (으)로 공격합니다"+ "(공격력 :"+공격력+")");
//    }
//////////////////////////####### 오버로드 : 받는 변수가다르면 다른메서드로 인식 ) ******************************
//}
//////////////////////////////////////////////////////////////////////////////////////////////////


//class Main {
//    public static void main(String[] args) {
//        System.out.println("== 청둥오리 ==");
//        청둥오리 a청둥오리 = new 청둥오리();
//        a청둥오리.날다(); // 오리가 날개로 날아갑니다.
//        a청둥오리.수영하다(); // 오리가 물갈퀴로 수영합니다.
//
//        System.out.println("== 흰오리 ==");
//        흰오리 a흰오리 = new 흰오리();
//        a흰오리.날다(); // 오리가 날개로 날아갑니다.
//        a흰오리.수영하다(); // 오리가 물갈퀴로 수영합니다.
//
//        System.out.println("== 고무오리 ==");
//        고무오리 a고무오리 = new 고무오리();
//        a고무오리.날다(); // 저는 못 날아요 ㅠㅠ
//        a고무오리.수영하다(); // 오리가 물에 둥둥 떠다닙니다.
//
//        System.out.println("== 고무2오리 ==");
//        고무2오리 a고무2오리 = new 고무2오리();
//        a고무2오리.날다(); // 저는 못 날아요 ㅠㅠ
//        a고무2오리.수영하다(); // 오리가 물에 둥둥 떠다닙니다.
//
//        System.out.println("== 로봇오리 ==");
//        로봇오리 a로봇오리 = new 로봇오리();
//        a로봇오리.날다(); // 오리가 날개로 날아갑니다.
//        a로봇오리.수영하다(); // 오리가 물에 둥둥 떠다닙니다.
//    }
//}
//class 오리 {
//    void 날다() {
//        System.out.println("오리가 날개로 날아갑니다.");
//    }
//
//    void 수영하다() {
//        System.out.println("오리가 물갈퀴로 수영합니다.");
//    }
//}
//class 흰오리 extends 오리 { }
//class 청둥오리 extends 오리 { }
//class 고무오리 extends 오리 {
//    void 날다() {
//        System.out.println("저는 못 날아요. ㅜㅠ");
//    }
//
//    void 수영하다() {
//        System.out.println("오리가 물에 둥둥 떠다닙니다.");
//    }
//}
//class 고무2오리 extends 고무오리 {
//
//}
//
//class 로봇오리 extends 오리{
//
//    @Override
//    void 수영하다(){
//        super.수영하다();
//    }
//}
//// 최상위 분모 상속 후 그 분모의 분자에 명령어를 실행하는 키워드 super